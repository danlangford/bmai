name: CMake

# if you are doing development on another branch and want GHActions to auto build the branch
# then add the branch name to the `push` section below
# you only need to make that change ON THE BRANCH to be built
# I like to remove it when merging into `main`
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # this allows us to manually dispatch the build from GH Actions UI
  workflow_dispatch:
    inputs:
      buildType:
        description: CMake build type (config)
        required: true
        default: 'Release'
        type: choice
        options:
        - Release
        - Debug

  schedule:
    - cron: '30 2 * * SUN' # run at 02:30 UTC Sundays

env:
  # if the build is not manually dispatched we will default to 'Release' build
  BUILD_TYPE: ${{ inputs.buildType || 'Release' }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    # The CMake configure and build commands are platform agnostic
    # and should work equally well on Windows or Mac.
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: lukka/get-cmake@latest

    - name: CMake Configure
      shell: bash
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake -S . -B build -D CMAKE_BUILD_TYPE=$BUILD_TYPE -G"Unix Makefiles"

    - name: CMake Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build build --config $BUILD_TYPE



    # NOTICE current error is 

    #    Run ctest -C $BUILD_TYPE
    #    env:
    #      BUILD_TYPE: Release
    #    Test project /home/runner/work/bmai/bmai/build
    #    No tests were found!!!

    # maybe we havent written tests and I just put this in here to follow some template?
    # TODO add some tests, or fix the problem running them

    - name: Test
      working-directory: build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

    - uses: actions/upload-artifact@v3
      with:
        name: bmai-${{ runner.os }}-${{ env.BUILD_TYPE }}
        if-no-files-found: error
        path: |
          ./build/bmai*

    - name: get date
      shell: bash
      run: |
        echo "DATE=$(date)" >> $GITHUB_ENV

    - name: auto-release tag and upload
      uses: andelf/nightly-release@main
      if: ${{ 'schedule' == github.event_name || 'workflow_dispatch' == github.event_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: auto-release-${{ runner.os }}
        name: '[auto] BMAI-${{ runner.os }}'
        prerelease: true
        body: |
          Build Type: ${{ env.BUILD_TYPE }}
          Run At: ${{ env.DATE }}
          > TODO: add auto release notes
        files: |
          ./build/bmai*
      # TODO: add other files maybe like test results
